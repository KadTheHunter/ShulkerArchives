Liquid Helium (A guaranteed witherpoison + res127 bypass) **PAPER ONLY**
somebodyOP
 — 
02/22/2023 1:26 AM
So, I've recently discovered some form of a pattern for damage of "2 billion sharpness" swords and made a potion based on that.
Here's the /give command:

/give @p splash_potion{CustomPotionColor:9419963,CustomPotionEffects:[{Ambient:0b,Amplifier:127b,Duration:35,Id:11b,ShowIcon:1b,ShowParticles:1b},{Ambient:0b,Amplifier:9b,Duration:35,Id:7b,ShowIcon:1b,ShowParticles:1b},{Ambient:0b,Amplifier:28b,Duration:35,Id:7b,ShowIcon:1b,ShowParticles:1b}],HideFlags:32,Potion:"minecraft:empty",display:{Lore:['{"text":"\\"No\\"","color":"dark_gray","italic":true}','[{"text":"elementary ","color":"#3B4252","italic":false},{"text":"Breeze","color":"#88C0D0","italic":false},{"text":" v2.1","color":"#3B4252","italic":false}]','[{"text":"by ","color":"#2E3440","italic":false},{"text":"ice","color":"#8FBCBB","italic":false},{"text":"you","color":"#eceff4","italic":false}]'],Name:'{"text":"Liquid Helium","color":"#88c0d0","italic":false}'}}

 
somebodyOP
 — 
02/22/2023 2:05 AM
Here's the pattern I used to find these instant damage potencies (for res 127 specifically)

Let's take the damage this potion would deal which is 1610609664
We get the floating point representation of this number, which is [0 | 10011101 | 01111111111111111101000]
Where the exponent is equal to 30 and the mantissa is 01111111111111111101000

Now's the weird part. To calculate the damage you'll deal (applies to positive damage only, so instant damage 29 isn't really relevant here (i think)):
You grab the last 5 bits of the mantissa [01111111111111111101000]
Then you use the first of those bits we just got as a sign (since it's zero, the number is positive)

Let's process the other 4 bits we have left. First we gotta zero out the last 2 bits [1000].
Then, we multiply that number (which is 8 in decimal) by 2 to the power of [Exponent - 23]: 8 * 2^(30-23) = 1024.
somebodyOP
 — 
02/22/2023 2:13 AM
ALL OF THIS NEEDS CONFIRMATION!!!!
If that sign was one, you need to grab the first 2 bits of that number [1000], and subtract that number from 4: 4 - 2 = 2 = 10 (in binary) and put it back into the number.

Since the sign bit is 1, the number's negative, so the final equation will look like this: (-1) * 8 * 2^(30-23) = -1024
somebody
 changed the post title: 
Liquid Helium (A guaranteed witherpoison + res127 bypass) **PAPER ONLY**
 — 
02/22/2023 2:14 AM
somebodyOP
 — 
02/22/2023 2:16 AM
Maybe we could take a look at the code of how the damage is processed so we can figure out what the heck is going on here
which is what i need help with
If we do figure out why we need to take these steps, then we can find the level of resistance where this DOESN'T apply
or maybe something else interesting is found
Here's a script which looks for instant damage combinations where this phenomenon applies...

import ctypes as c
import numpy as np

def main():
    damageList = []
    for b in range (0,31):

Expand
theultimatesearch.py2 KB
somebodyOP
 — 
02/22/2023 2:28 AM
hjelp
somebodyOP
 — 
02/23/2023 3:18 PM
Turns out
the range of values that damage through res 127 is bigger
than what the script predicts
somebodyOP
 — 
02/27/2023 2:18 AM
Note to self (a thing to check):
Maybe it attempts to fix floating errors after multiplication?